{"version":3,"sources":["js/render-library-markup.js","js/markupSingleMovie.js","js/localStorage.js","js/spinner.js","js/footer.js","library.js"],"names":["renderLibraryMarkup","movArr","libraryGall","document","querySelector","markup","map","title","release_date","poster_path","id","releaseYear","Date","getFullYear","join","insertAdjacentHTML","createMarkupSingleMovie","original_title","vote_average","vote_count","popularity","genres","overview","movie_genres","genre","name","movie_popularity","toFixed","movie_title","toUpperCase","btnLibraryWatched","btnLibraryQueue","refs","gallery","modalwrap","closeModalBtn","modal","body","backdrop","toggleModal","classList","toggle","handleEscPress","e","console","log","code","add","renderWatchedMovies","getMoviesFromQueue","watchedArr","JSON","parse","localStorage","getItem","renderQueueMovies","toogleBtnsLibrary","a","b","remove","onCardClick","target","tagName","movie","CARD_ID","Number","dataset","check","singleMov","filter","el","res","innerHTML","addEventListener","window","ev","event","loadAnim","setTimeout","getElementById"],"mappings":"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","file":"library.4e396c6f.js","sourceRoot":"../src","sourcesContent":["export default function renderLibraryMarkup(movArr) {\n  const libraryGall = document.querySelector('.library-gallery');\n  const normalizedMovies = movArr.map(({ title, release_date, poster_path, id }) => {\n    const releaseYear = new Date(release_date).getFullYear();\n    // let poster = emptyImg;\n    // if (poster_path) {\n    //   poster = `https://image.tmdb.org/t/p/w500${poster_path}`;\n    // }\n    return { title, releaseYear, poster_path, id };\n  });\n  const markup = normalizedMovies\n    .map(({ title, releaseYear, poster_path, id }) => {\n      return `<div class=\"movies-card\">\n      <img class=\"movies\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" data-id=\"${id}\">\n      <p class=\"movies_name\">\n        ${title} <br/>\n        <span class=\"genre\">Drama | ${releaseYear}</span>\n      </p></div>`;\n    })\n    .join('');\n  libraryGall.insertAdjacentHTML('beforeend', markup);\n}\n","export default function createMarkupSingleMovie({\n  poster_path,\n  original_title,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n  overview,\n}) {\n  const movie_genres = genres.map(genre => genre.name).join(', ');\n  const movie_popularity = popularity.toFixed(1);\n  const movie_title = original_title.toUpperCase();\n  return `\n    <img class=\"modal-content__img\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${original_title}\" />\n    <div class=\"wrap\">\n      <h1 class=\"modal-content__title\">${original_title}</h1>\n      <div class=\"info-wrap modal-content__info-wrap\">\n        <ul class=\"category-list\">\n          <li class=\"category-list__item\">Vote / Votes</li>\n          <li class=\"category-list__item\">Popularity</li>\n          <li class=\"category-list__item\">Original Title</li>\n          <li class=\"category-list__item\">Genre</li>\n        </ul>\n        <ul class=\"category-value-list modal-content__category-value-list\">\n          <li class=\"category-value-list__item\"><span class=\"category-value-list__item_bg-color\">${vote_average}</span\n              class=\"\"><span class=\"category-value-list__item_font-color\"> / </span> ${vote_count} </li>\n          <li class=\"category-value-list__item\">${movie_popularity}</li>\n          <li class=\"category-value-list__item\">${movie_title}</li>\n          <li class=\"category-value-list__item\">${movie_genres}</li>\n        </ul>\n      </div>\n      <button class=\"modal-content__trailer-btn\">watch the trailer</button>\n      <h2 class=\"modal-content__subtitle\">About</h2>\n      <p class=\"modal-content__description\">${overview}</p>\n      <div class=\"btn-wrap content__btn-wrap\">\n          <button class=\"btn-wrap__btn active\" data-action=\"watched\">add to Watched</button>\n          <button class=\"btn-wrap__btn \" data-action=\"queue\">add to queue</button>\n        </div>\n    `;\n}\n","import renderLibraryMarkup from './render-library-markup';\nimport createMarkupSingleMovie from './markupSingleMovie';\nconst btnLibraryWatched = document.querySelector('.btn-library-watched');\nconst btnLibraryQueue = document.querySelector('.btn-library-queue');\nconst libraryGall = document.querySelector('.library-gallery');\n\nconst refs = {\n  gallery: document.querySelector('.library-gallery'),\n  modalwrap: document.querySelector('.output-js'),\n  closeModalBtn: document.querySelector('[data-modal-close]'),\n  modal: document.querySelector('[data-modal]'),\n  body: document.querySelector('body'),\n  backdrop: document.querySelector('.backdrop'),\n};\n\nfunction toggleModal() {\n  refs.modal.classList.toggle('is-hidden');\n  refs.body.classList.toggle('no-scroll');\n}\n\n// Закрытие модалки по кнопке ESC\nconst handleEscPress = function (e) {\n  console.log(e.code);\n  if (e.code === 'Escape') {\n    refs.modal.classList.add('is-hidden');\n    // window.removeEventListener('keydown', handleEscPress); //!удаление слушателя\n    refs.body.classList.toggle('no-scroll');\n  }\n};\nrefs.closeModalBtn.addEventListener('click', toggleModal);\nwindow.addEventListener('keydown', handleEscPress);\n\nrenderWatchedMovies();\n\nbtnLibraryWatched.addEventListener('click', ev => {\n  btnLibraryQueue.dataset.check = 'notok';\n  toogleBtnsLibrary(btnLibraryWatched, btnLibraryQueue);\n  libraryGall.innerHTML = '';\n  renderWatchedMovies();\n});\n\nbtnLibraryQueue.addEventListener('click', ev => {\n  btnLibraryQueue.dataset.check = 'ok';\n  toogleBtnsLibrary(btnLibraryQueue, btnLibraryWatched);\n  btnLibraryWatched.classList.add('header-library-contain__link--inactive');\n  libraryGall.innerHTML = '';\n  renderQueueMovies();\n});\n\n// Достаем инфу из LocalStorage по фильмам \"WATCHED\"\nfunction renderWatchedMovies() {\n  const getMoviesFromQueue = () => JSON.parse(localStorage.getItem('WATCHED')) || [];\n  const watchedArr = getMoviesFromQueue();\n  renderLibraryMarkup(watchedArr);\n}\n\n// Достаем инфу из LocalStorage по фильмам \"QUEUE\"\nfunction renderQueueMovies() {\n  const getMoviesFromQueue = () => JSON.parse(localStorage.getItem('QUEUE')) || [];\n  const watchedArr = getMoviesFromQueue();\n  renderLibraryMarkup(watchedArr);\n}\nfunction toogleBtnsLibrary(a, b) {\n  a.classList.add('header-library-contain__link--active');\n  b.classList.remove('header-library-contain__link--active');\n}\n\n// Логика модального окна Library\nlibraryGall.addEventListener('click', onCardClick);\nfunction onCardClick(e) {\n  if (e.target.tagName !== 'IMG') {\n    return;\n  }\n  toggleModal();\n  const movie = e.target;\n  const CARD_ID = Number(movie.dataset.id);\n\n  if (btnLibraryQueue.dataset.check !== 'ok') {\n    const getMoviesFromQueue = () => JSON.parse(localStorage.getItem('WATCHED')) || [];\n    const watchedArr = getMoviesFromQueue();\n    const singleMov = watchedArr.filter(el => {\n      return el.id === CARD_ID;\n    });\n    const res = createMarkupSingleMovie(...singleMov);\n    refs.modalwrap.innerHTML = res;\n  } else {\n    const getMoviesFromQueue = () => JSON.parse(localStorage.getItem('QUEUE')) || [];\n    const watchedArr = getMoviesFromQueue();\n    const singleMov = watchedArr.filter(el => {\n      return el.id === CARD_ID;\n    });\n    const res = createMarkupSingleMovie(...singleMov);\n    refs.modalwrap.innerHTML = res;\n  }\n}\n\n//     // Слушатели событий для кнопок в модалке\n//     const btnQueue = document.querySelector('[data-action=\"queue\"]');\n//     const btnWatched = document.querySelector('[data-action=\"watched\"]');\n//     btnWatched.addEventListener('click', handleWatchLibrary);\n//     btnQueue.addEventListener('click', handleQueueLibrary);\n","window.addEventListener('load', event => {\n  let loadAnim = document.querySelector('.loading');\n  setTimeout(() => {\n    loadAnim.classList.remove('loading');\n  }, 1000);\n});\n","document.getElementById('year').innerHTML = new Date().getFullYear();\n","import './sass/main.scss';\nimport './js/localStorage';\nimport './js/render-library-markup';\nimport './js/spinner';\n// import './js/api-service';\n// import './js/modal-window';\n// import './js/render-movies';\n// import './js/make-markup';\nimport './js/footer';\n"]}