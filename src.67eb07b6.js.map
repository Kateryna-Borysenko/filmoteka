{"version":3,"sources":["js/make-markup.js","js/pagination.js","js/api-service.js","js/markupSingleMovie.js","js/modal-window.js","js/render-movies.js","js/spinner.js","js/back-to-top.js","js/footer.js","index.js"],"names":["gall","document","querySelector","makeMoviesMarkup","movies","normalizedMovies","map","title","release_date","poster_path","id","releaseYear","Date","getFullYear","Promise","all","imgL","createElement","src","classList","add","dataset","res","onload","then","arr","innerHTML","outerHTML","join","searchInput","pagList","pagLeft","pagRight","paginFunc","ev","pagValue","target","pagnumber","changePage","fetchMovies","results","onLeftClick","api","page","onRightClick","renderNumberPag","currentPage","maxPage","isMobile","window","innerWidth","i","push","getItemHtml","leftItemsLength","rightItemsLength","leftItems","rightItems","dotsLeft","dotsRight","addEventListener","value","isActive","dataValue","totalPages","ApiService","constructor","inputText","urlBase","BASE_URL","API_KEY","encodeURIComponent","fetch","data","ok","json","reject","Error","total_pages","getMovieData","inputValue","newInputValue","newPage","disabled","createMarkupSingleMovie","original_title","vote_average","vote_count","popularity","genres","overview","movie_genres","genre","name","movie_popularity","toFixed","movie_title","toUpperCase","refs","gallery","modalwrap","closeModalBtn","modal","body","backdrop","toggleModal","toggle","handleEscPress","e","console","log","code","getMoviesFromQueue","JSON","parse","localStorage","getItem","getMoviesFromWatched","onCardClick","tagName","movie","CARD_ID","Number","markup","btnQueue","handleWatchLibrary","watched","find","el","setItem","stringify","handleQueueLibrary","queue","handleSearch","event","getMovies","catch","err","handleError","loadAnim","setTimeout","remove","sttElem","screanHeight","innerHeight","sttScroll","scrollY","scrollingElement","scrollTop","style","pointerEvents","sttClick","docHeight","progress","position","requestAnimationFrame","sttAnim","scrollTo","sttFunc","getElementById"],"mappings":"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","file":"src.67eb07b6.js","sourceRoot":"../src","sourcesContent":["const gall = document.querySelector('.movies-gallery');\n\nexport default async function makeMoviesMarkup(movies) {\n  const normalizedMovies = movies.map(({ title, release_date, poster_path, id }) => {\n    const releaseYear = new Date(release_date).getFullYear();\n    // let poster = emptyImg;\n    // if (poster_path) {\n    //   poster = `https://image.tmdb.org/t/p/w500${poster_path}`;\n    // }\n    return { title, releaseYear, poster_path, id };\n  });\n  return Promise.all(\n    normalizedMovies.map(({ title, releaseYear, poster_path, id }) => {\n      const imgL = document.createElement('img');\n      imgL.src = `https://image.tmdb.org/t/p/w500${poster_path}`;\n      imgL.classList.add('movies');\n      imgL.dataset.id = id;\n      return new Promise(res => {\n        imgL.onload = () => res({ title, releaseYear, imgL });\n      });\n    }),\n  ).then(arr => {\n    gall.innerHTML = arr\n      .map(\n        ({ title, releaseYear, imgL }) => `<div class=\"movies-card\">\n      ${imgL.outerHTML}\n      <p class=\"movies_name\">\n        ${title} <br/>\n        <span class=\"genre\">Drama | ${releaseYear}</span>\n      </p></div>`,\n      )\n      .join('');\n  });\n}\n","import api from './api-service';\nimport makeMoviesMarkup from './make-markup';\n\nconst gall = document.querySelector('.movies-gallery');\nconst searchInput = document.querySelector('#header-contain-input');\nconst pagList = document.querySelector('.pagination-list');\nconst pagLeft = document.querySelector('.pagination-row-left');\nconst pagRight = document.querySelector('.pagination-row-right');\n\npagList.addEventListener('click', paginFunc);\nfunction paginFunc(ev) {\n  const pagValue = +ev.target.dataset.pagnumber;\n  if (!pagValue) return;\n  api.changePage(pagValue);\n  api.fetchMovies().then(results => {\n    makeMoviesMarkup(results);\n  });\n}\npagLeft.addEventListener('click', onLeftClick);\npagRight.addEventListener('click', onRightClick);\n\nfunction onLeftClick(ev) {\n  api.changePage(api.page - 1);\n  api.fetchMovies().then(results => {\n    makeMoviesMarkup(results);\n  });\n}\nfunction onRightClick(ev) {\n  api.changePage(api.page + 1);\n  api.fetchMovies().then(results => {\n    makeMoviesMarkup(results);\n  });\n}\nwindow.addEventListener('resize', ev => {\n  renderNumberPag(api.page, api.totalPages);\n});\n\nfunction renderNumberPag(currentPage, maxPage) {\n  const isMobile = window.innerWidth < 768;\n  let arr = [];\n  if (maxPage <= 5 || (maxPage <= 9 && !isMobile)) {\n    for (let i = 1; i <= maxPage; i++) {\n      arr.push(getItemHtml(i, i === api.page));\n    }\n    pagList.innerHTML = arr.join('');\n    return;\n  }\n\n  const leftItemsLength = currentPage - 1;\n  const rightItemsLength = maxPage - currentPage;\n\n  let leftItems = 2;\n  let rightItems = 2;\n\n  if (leftItemsLength < 2) {\n    leftItems = leftItemsLength;\n    rightItems += 2 - leftItemsLength;\n  } else if (leftItemsLength < 5 && !isMobile) {\n    leftItems = leftItemsLength;\n    rightItems += 5 - leftItemsLength - 1;\n  }\n  if (rightItemsLength < 2) {\n    rightItems = rightItemsLength;\n    leftItems += 2 - rightItemsLength;\n  } else if (rightItemsLength < 5 && !isMobile) {\n    rightItems = rightItemsLength;\n    leftItems += 5 - rightItemsLength - 1;\n  }\n\n  if (leftItemsLength > 4 && !isMobile) {\n    arr.push(getItemHtml(1));\n    arr.push(getItemHtml('...', false, 'prev'));\n  }\n  for (let i = leftItems; i >= 0; i--) {\n    arr.push(getItemHtml(currentPage - i, currentPage - i === api.page));\n  }\n\n  for (let i = 1; i <= rightItems; i++) {\n    arr.push(getItemHtml(+currentPage + i));\n  }\n\n  if (rightItemsLength > 4 && !isMobile) {\n    arr.push(getItemHtml('...', false, 'next'));\n    arr.push(getItemHtml(maxPage));\n  }\n\n  pagList.innerHTML = arr.join('');\n  const dotsLeft = document.querySelector('[data-pagnumber=\"prev\"]');\n  const dotsRight = document.querySelector('[data-pagnumber=\"next\"]');\n  if (dotsLeft) {\n    dotsLeft.addEventListener('click', ev => {\n      renderNumberPag(+currentPage - 5, maxPage);\n    });\n  }\n  if (dotsRight) {\n    dotsRight.addEventListener('click', ev => {\n      renderNumberPag(+currentPage + 5, maxPage);\n    });\n  }\n}\n\nfunction getItemHtml(value, isActive = false, dataValue) {\n  return `<li class=\"pagination-item\">\n<button class=\"pagination-btn ${isActive ? 'pagination-btn__active' : ''}\" data-pagnumber=\"${\n    dataValue || value\n  }\" type=\"button\">${value}</button>\n</li>`;\n}\n\nexport { renderNumberPag };\n","import { renderNumberPag } from './pagination.js';\n\nconst pagLeft = document.querySelector('.pagination-row-left');\nconst pagRight = document.querySelector('.pagination-row-right');\n// All fetch logic collected here\nclass ApiService {\n  BASE_URL = 'https://api.themoviedb.org/3';\n  API_KEY = '87f9885ae1efa5e26738121aab64796c';\n  constructor() {\n    this.inputText = '';\n    this.page = 1;\n    this.totalPages = null;\n  }\n  // Fetch Movies instantly\n  fetchMovies() {\n    let urlBase = this.inputText\n      ? `${this.BASE_URL}/search/movie?api_key=${this.API_KEY}&language=en-US&page=${\n          this.page\n        }&include_adult=false&query=${encodeURIComponent(this.inputText)}`\n      : `${this.BASE_URL}/trending/movie/week?api_key=${this.API_KEY}&page=${this.page}`;\n\n    return fetch(urlBase)\n      .then(data => {\n        if (data.ok) {\n          return data.json();\n        }\n        return Promise.reject(new Error('Error'));\n      })\n      .then(data => {\n        if (data.total_pages !== this.totalPages) {\n          this.totalPages = data.total_pages;\n        }\n        renderNumberPag(this.page, this.totalPages);\n        return data.results;\n      });\n  }\n  getMovieData(id) {\n    return fetch(`${this.BASE_URL}/movie/${id}?api_key=${this.API_KEY}`).then(data => {\n      if (data.ok) {\n        return data.json();\n      }\n      return Promise.reject(new Error('Error'));\n    });\n  }\n\n  // Search & fetch Movies with header input\n  // searchMovies() {\n  //   return fetch(\n  //     `${this.BASE_URL}/search/movie?api_key=${this.API_KEY}&language=en-US&page=${this.page}&include_adult=false&query=${this.inputText}`,\n  //   )\n  //     .then(data => {\n  //       if (data.ok) {\n  //         return data.json();\n  //       }\n  //       return Promise.reject(new Error('Error'));\n  //     })\n  //     .then(data => data.results);\n  // }\n\n  get inputValue() {\n    return this.inputText;\n  }\n  set inputValue(newInputValue) {\n    this.inputText = newInputValue;\n  }\n  changePage(newPage) {\n    if (newPage === 1) {\n      pagLeft.disabled = true;\n    } else if (pagLeft.disabled) {\n      pagLeft.disabled = false;\n    }\n    if (newPage === this.totalPages) {\n      pagRight.disabled = true;\n    } else if (pagRight.disabled) {\n      pagRight.disabled = false;\n    }\n    this.page = newPage;\n  }\n}\n\nconst api = new ApiService();\nexport default api;\n","export default function createMarkupSingleMovie({\n  poster_path,\n  original_title,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n  overview,\n}) {\n  const movie_genres = genres.map(genre => genre.name).join(', ');\n  const movie_popularity = popularity.toFixed(1);\n  const movie_title = original_title.toUpperCase();\n  return `\n    <img class=\"modal-content__img\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${original_title}\" />\n    <div class=\"wrap\">\n      <h1 class=\"modal-content__title\">${original_title}</h1>\n      <div class=\"info-wrap modal-content__info-wrap\">\n        <ul class=\"category-list\">\n          <li class=\"category-list__item\">Vote / Votes</li>\n          <li class=\"category-list__item\">Popularity</li>\n          <li class=\"category-list__item\">Original Title</li>\n          <li class=\"category-list__item\">Genre</li>\n        </ul>\n        <ul class=\"category-value-list modal-content__category-value-list\">\n          <li class=\"category-value-list__item\"><span class=\"category-value-list__item_bg-color\">${vote_average}</span\n              class=\"\"><span class=\"category-value-list__item_font-color\"> / </span> ${vote_count} </li>\n          <li class=\"category-value-list__item\">${movie_popularity}</li>\n          <li class=\"category-value-list__item\">${movie_title}</li>\n          <li class=\"category-value-list__item\">${movie_genres}</li>\n        </ul>\n      </div>\n      <button class=\"modal-content__trailer-btn\">watch the trailer</button>\n      <h2 class=\"modal-content__subtitle\">About</h2>\n      <p class=\"modal-content__description\">${overview}</p>\n      <div class=\"btn-wrap content__btn-wrap\">\n          <button class=\"btn-wrap__btn active\" data-action=\"watched\">add to Watched</button>\n          <button class=\"btn-wrap__btn \" data-action=\"queue\">add to queue</button>\n        </div>\n    `;\n}\n","import createMarkupSingleMovie from './markupSingleMovie';\nimport api from './api-service';\nimport makeMoviesMarkup from './make-markup';\nconst refs = {\n  gallery: document.querySelector('.movies-gallery'),\n  modalwrap: document.querySelector('.output-js'),\n  closeModalBtn: document.querySelector('[data-modal-close]'),\n  modal: document.querySelector('[data-modal]'),\n  body: document.querySelector('body'),\n  backdrop: document.querySelector('.backdrop'),\n};\n\nfunction toggleModal() {\n  refs.modal.classList.toggle('is-hidden');\n  refs.body.classList.toggle('no-scroll');\n}\n\n// Закрытие модалки по кнопке ESC\nconst handleEscPress = function (e) {\n  console.log(e.code);\n  if (e.code === 'Escape') {\n    refs.modal.classList.add('is-hidden');\n    // window.removeEventListener('keydown', handleEscPress); //!удаление слушателя\n    refs.body.classList.toggle('no-scroll');\n  }\n};\n\n// достать фильмы \"В очереди\" из LocalStorage\nconst getMoviesFromQueue = () => JSON.parse(localStorage.getItem('QUEUE')) || [];\n// достать фильмы \"Просмотренные\" из LocalStorage\nconst getMoviesFromWatched = () => JSON.parse(localStorage.getItem('WATCHED')) || [];\n\nfunction onCardClick(e) {\n  if (e.target.tagName !== 'IMG') {\n    return;\n  }\n  toggleModal();\n\n  const movie = e.target;\n  const CARD_ID = Number(movie.dataset.id);\n\n  api.getMovieData(CARD_ID).then(data => {\n    function handleWatchLibrary() {\n      const watched = getMoviesFromWatched();\n      const isIncluded = watched.find(el => el.id === data.id);\n      if (!isIncluded) {\n        localStorage.setItem('WATCHED', JSON.stringify([...watched, data]));\n      }\n    }\n\n    function handleQueueLibrary() {\n      const queue = getMoviesFromQueue();\n      const isIncluded = queue.find(el => el.id === data.id);\n      if (!isIncluded) {\n        localStorage.setItem('QUEUE', JSON.stringify([...queue, data]));\n      }\n    }\n\n    // Создать разметку в модалке для одного фильма\n    const markup = createMarkupSingleMovie(data);\n    refs.modalwrap.innerHTML = markup;\n\n    // Слушатели событий для кнопок в модалке\n    const btnQueue = document.querySelector('[data-action=\"queue\"]');\n    const btnWatched = document.querySelector('[data-action=\"watched\"]');\n    btnWatched.addEventListener('click', handleWatchLibrary);\n    btnQueue.addEventListener('click', handleQueueLibrary);\n\n    // Отправить фильмы \"Очередь\" в localStorage\n  });\n}\n\nrefs.closeModalBtn.addEventListener('click', toggleModal);\nrefs.gallery.addEventListener('click', onCardClick);\n// refs.backdrop.addEventListener('click', e => {\n//   if (e.target.className.includes('backdrop')) {\n//     toggleModal();\n//   }\n// });\nwindow.addEventListener('keydown', handleEscPress);\n","import api from './api-service';\nimport makeMoviesMarkup from './make-markup';\n// const api = new ApiService();\n\nconst searchInput = document.querySelector('#header-contain-input');\n// How to handle input event in header Section\nconst handleSearch = ev => {\n  api.inputText = event.target.value;\n  api.fetchMovies().then(results => {\n    makeMoviesMarkup(results);\n  });\n  if (event.target.value === '') getMovies();\n};\n\n// Event Listener on header input for search & render movies\nsearchInput.addEventListener('input', handleSearch);\n\n// Function for creating movies on first loading of the web-page\nconst getMovies = () => {\n  api\n    .fetchMovies()\n    .then(results => {\n      makeMoviesMarkup(results);\n    })\n    .catch(err => handleError(err));\n};\n\n// Render movies into movies-gallery on the main page\n\ngetMovies();\n","window.addEventListener('load', event => {\n  let loadAnim = document.querySelector('.loading');\n  setTimeout(() => {\n    loadAnim.classList.remove('loading');\n  }, 1000);\n});\n","var sttElem = document.querySelector('.stt');\nvar screanHeight = window.innerHeight;\n\nvar sttScroll = function sttScroll() {\n  document.addEventListener('scroll', function (e) {\n    if (screanHeight <= window.scrollY) {\n      sttElem.classList.add('stt__active');\n    } else if (e.target.scrollingElement.scrollTop <= screanHeight) {\n      sttElem.classList.remove('stt__active');\n      sttElem.style.pointerEvents = 'auto';\n    }\n  });\n};\n\nvar sttClick = function sttClick() {\n  sttElem.addEventListener('click', function () {\n    var docHeight = window.scrollY;\n    var progress = 0;\n    var position = docHeight;\n    var speed = 5; // When increasing this value. The scrolling speed will increase\n\n    sttElem.style.pointerEvents = 'none';\n\n    var sttAnim = function sttAnim() {\n      progress += 1;\n      position -= progress * speed;\n      window.scrollTo(0, position);\n\n      if (position > 0) {\n        requestAnimationFrame(sttAnim);\n      }\n    };\n\n    requestAnimationFrame(sttAnim);\n  });\n};\n\nvar sttFunc = function sttFunc() {\n  sttScroll();\n  sttClick();\n};\n\ndocument.addEventListener('DOMContentLoaded', sttFunc);\n","document.getElementById('year').innerHTML = new Date().getFullYear();\n","import './sass/main.scss';\nimport './js/api-service';\nimport './js/modal-window';\nimport './js/render-movies';\nimport './js/make-markup';\nimport './js/pagination';\nimport './js/markupSingleMovie';\nimport './js/spinner';\nimport './js/back-to-top';\nimport './js/footer';\n"]}